#
# APP_NAME, APP_PORT, DOC_ROOT

upstream webapp_backend {
    # Load balancing
    # It can be round_robin, least_conn, or ip_hash
    # For details, see http://nginx.org/en/docs/http/load_balancing.html
    least_conn;
    # maintain a maximum of 100 idle connections to each upstream server
    keepalive 100;
    server 127.0.0.1:5000 weight=1 max_fails=3 fail_timeout=30s;
}

server {
    server_name webapp.com;
	  listen 80;

    root /home/svc00/webapp-service/current/public;

    # serve static files directly using nginx
    # image file extentions (case-insensitive)
    location ~* \.(jpe?g|png|gif|ico)$ {
      access_log off;
      expires 24h; # cash
    }
    # web file extentions (case-insensitive)
    location ~* \.(js|css)$ {
      access_log off;
      expires 24h; # cash
    }

    # /files 파일에 있는 내용은 cash 하지 않는다.
    location /files/ {
      access_log off;
      expires -1;
    }

    location /app {
        proxy_pass http://webapp_backend/app;
        proxy_redirect off;
        proxy_read_timeout 240s;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        # required if you work with "WebSockets"
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_max_temp_file_size 0;
        proxy_cache_bypass $http_upgrade;
        proxy_http_version 1.1;

        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }

    client_max_body_size 10M;

    # disable "Server" from response header
    server_tokens off;

    access_log /home/svc00/webapp-service/log/nginx/webapp-access.log;
    error_log /home/svc00/webapp-service/log/nginx/webapp-error.log;
}
